{"version":3,"file":"static/js/254.3846ca1f.chunk.js","mappings":"0OA6FA,UAxFwB,WAAO,IAAD,EAC1B,GAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,KAAM,CAAC,EACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAKOC,GAAMC,EAAAA,EAAAA,MAAND,GACDE,GAAWC,EAAAA,EAAAA,MAIXC,GAAO,WAFIC,EAAAA,EAAAA,MAEKP,aAAT,eAAgBM,OAAQ,WAErCE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,oGAEZR,GAAS,SAAAS,GAAS,yBACXA,GADW,IAEdZ,SAAS,EACTC,MAAO,MAHO,IAFN,UAQSY,EAAAA,EAAAA,IAAeT,GARxB,OAQNU,EARM,OASZX,GAAS,SAAAS,GACL,OAAO,kBACAA,GADP,IAEIb,KAAMe,GAEb,IAdW,gDAgBZX,GAAS,SAAAS,GAAS,yBACXA,GADW,IAEdX,MAAK,MAFS,IAhBN,yBAsBZE,GAAS,SAAAS,GACL,OAAO,kBACAA,GADP,IAEIZ,SAAS,GAEhB,IA3BW,4EAAH,qDA+BjBW,GACH,GAAE,CAACP,EAAID,IAER,IAGkBY,EADlB,EAAsDb,EAAMH,KAApDiB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,aAGtC,OACI,iBAAKC,UAAU,YAAf,WACI,mBAAQC,QAPD,kBAAMf,EAASE,EAAf,EAOP,sBACA,wBAAKU,KACJ,0BACD,gBAAKI,KAPKP,EAOUE,EAPX,yCAA2CF,IAOlBQ,IAAKL,QAEpCC,IACD,wCAAgBK,KAAKC,MAAqB,GAAfN,GAA3B,QAEF,oCACA,kBAKA,uBAAIH,KACJ,4BACF,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMd,MAAO,CAAEM,KAAAA,GAAQkB,GAAE,kBAAatB,EAAb,SAAzB,qBAEF,yBACC,SAAC,KAAD,CAAMF,MAAO,CAAEM,KAAAA,GAAQkB,GAAE,kBAAatB,EAAb,YAAzB,8BAKD,SAAC,KAAD,MAIX,C,sLCzFKuB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAKJC,EAAS,mCAAG,sGACAL,EAASM,IAAI,qBAAsB,CACpDH,OAAQ,CAAC,IAFQ,uBACdI,EADc,EACdA,KADc,kBAOdA,EAAKC,SAPS,2CAAH,qDAUTtB,EAAc,mCAAG,WAAMT,GAAN,yFACLuB,EAASM,IAAT,gBAAsB7B,IADjB,uBACnB8B,EADmB,EACnBA,KADmB,kBAGnBA,GAHmB,2CAAH,sDAMdE,EAAY,mCAAG,WAAOC,GAAP,yFACHV,EAASM,IAAI,gBAAiB,CAC/CH,OAAQ,CACJO,MAAAA,KAHgB,uBACjBH,EADiB,EACjBA,KADiB,kBAOjBA,EAAKC,SAPY,2CAAH,sDAUZG,EAAgB,mCAAG,WAAMlC,GAAN,yFACPuB,EAASM,IAAT,iBAAuB7B,EAAvB,aADO,uBACrB8B,EADqB,EACrBA,KADqB,kBAGrBA,EAAKC,SAHgB,2CAAH,sDAMhBI,EAAe,mCAAG,WAAMnC,GAAN,yFACNuB,EAASM,IAAT,iBAAuB7B,EAAvB,aADM,uBACpB8B,EADoB,EACpBA,KACXM,QAAQC,IAAIP,EAAKQ,MAFc,kBAGpBR,EAAKQ,MAHe,2CAAH,qD","sources":["pages/SingleMoviePage/SingleMoviePage.jsx","shared/api/movies.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport {Link, Outlet, useParams, useNavigate, useLocation} from \"react-router-dom\";\n\nimport { getSingleMovie } from \"../../shared/api/movies\";\n\nconst SingleMoviePage = () => {\n    const [state, setState] = useState({\n        item: {},\n        loading: false,\n        error: null,\n    });\n    const {id} = useParams();\n    const navigate = useNavigate();\n\n    const location = useLocation();\n\n    const from = location.state?.from || \"/movies\";\n\n    useEffect(()=> {\n        const fetchMovies = async() => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n                }));\n    \n                const result = await getSingleMovie(id);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        item: result,\n                    }\n                })\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    }\n                })\n            }\n        };\n\n        fetchMovies();\n    }, [id, setState]);\n\n    const goBack = () => navigate(from);\n\n    const { overview, poster_path, title, vote_average} = state.item;\n    const imagePath =(path)=> `https://image.tmdb.org/t/p/w500${path}`;\n\n    return (\n        <div className=\"container\">\n            <button onClick={goBack}>Go Back</button>\n            <h2>{title}</h2>\n             <div>\n            <img src={imagePath(poster_path)} alt={title} />\n            </div>\n            {!!vote_average && (\n              <p>User Score: {Math.round(vote_average * 10)}%</p>\n            )}\n            <h3>Genres</h3>\n            <p>\n              \n            </p>\n                      \n            \n            <p>{overview}</p>\n            <div >\n          <h4>Additional information</h4>\n          <ul>\n            <li >\n              <Link state={{ from }} to={`/movies/${id}/cast`}>Cast</Link>\n            </li>\n            <li >\n             <Link state={{ from }} to={`/movies/${id}/reviews`}>Reviews</Link>\n            </li>\n          </ul>\n        </div>\n                    \n            <Outlet />\n        </div>\n        \n    )\n}\n\nexport default SingleMoviePage;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: '81e207fecffa1302d8e26d6b5f9ddafd',\n    }\n});\n\n\nexport const getMovies = async() => {\n    const {data} = await instance.get(\"trending/movie/day\", {\n        params: {\n          \n        }\n    });\n    \n    return data.results;\n}\n\nexport const getSingleMovie = async(id) => {\n    const {data} = await instance.get(`movie/${id}`);\n\n    return data;\n}\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n        }\n    });\n    \n    return data.results;\n}\n\nexport const getMovieComments = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/reviews`);\n\n    return data.results;\n}\n\nexport const getMovieCredits = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/credits`);\nconsole.log(data.cast);\n    return data.cast;\n}"],"names":["useState","item","loading","error","state","setState","id","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchMovies","prevState","getSingleMovie","result","path","overview","poster_path","title","vote_average","className","onClick","src","alt","Math","round","to","instance","axios","baseURL","params","api_key","getMovies","get","data","results","searchMovies","query","getMovieComments","getMovieCredits","console","log","cast"],"sourceRoot":""}