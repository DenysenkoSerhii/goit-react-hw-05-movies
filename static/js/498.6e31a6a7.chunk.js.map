{"version":3,"file":"static/js/498.6e31a6a7.chunk.js","mappings":"6KAGMA,EAAa,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OAC3B,SAAC,KAAD,CAAgBC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMR,GAAnD,UAA8D,wBAAKK,KAAvDD,EADe,IAI3B,OAAO,wBAAKF,GACf,EAED,KAAeO,EAAAA,EAAAA,MAAKX,GAEpBA,EAAWY,aAAe,CACtBX,MAAO,G,uJCeX,EA7ByB,SAAC,GAAgB,IAAfY,EAAc,EAAdA,SACvB,GAA0BC,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,KADZ,eAAON,EAAP,KAAcO,EAAd,KAoBA,OACI,kBAAMH,SATW,SAACI,GAClBA,EAAEC,iBACFL,GAAS,UAAIJ,IACbO,EAAS,CACLD,OAAQ,IAEf,EAGG,WACI,kBAAOI,KAAK,SAASC,MAAOX,EAAMM,OAAQM,SAlB7B,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZH,EAAeG,EAAfH,KAAMC,EAASE,EAATF,MACbJ,GAAS,kBACFP,GADC,cAEHU,EAAOC,IAEf,EAYyEG,YAAY,iCAAQC,UAAQ,KAC9F,mBAAQC,KAAK,SAAb,oDAGX,E,kBCqCD,EA1DyB,WACrB,OAA0BX,EAAAA,EAAAA,UAAS,CAC/Bb,MAAO,GACPyB,SAAS,EACTC,MAAO,OAHX,eAAOlB,EAAP,KAAcO,EAAd,KAMA,GAAwCY,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMf,EAASc,EAAaE,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,oGAEZjB,GAAS,SAAAkB,GAAS,yBACXA,GADW,IAEdR,SAAS,GAFK,IAFN,UAOOS,EAAAA,EAAAA,IAAapB,GAPpB,OAONqB,EAPM,OAQZpB,GAAS,SAAAkB,GAAS,yBACXA,GADW,IAEdjC,MAAOmC,GAFO,IARN,gDAaZpB,GAAS,SAAAkB,GAAS,yBACXA,GADW,IAEdP,MAAK,MAFS,IAbN,yBAmBZX,GAAS,SAAAkB,GAAS,yBACXA,GADW,IAEdR,SAAS,GAFK,IAnBN,4EAAH,qDA0BdX,GACCkB,GAEP,GAAE,CAAClB,IAEJ,IAIOd,EAASQ,EAATR,MAEP,OACI,iBAAKoC,UAAU,YAAf,WACI,gDACA,SAAC,EAAD,CAAkBxB,SATL,SAAC,GAAc,IAAbE,EAAY,EAAZA,OACnBe,EAAgB,CAACf,OAAAA,GACpB,IAQQd,EAAMqC,OAAS,IAAK,SAACtC,EAAA,EAAD,CAAYC,MAAOA,MAGnD,C,sLC9DKsC,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAKJC,EAAS,mCAAG,sGACAL,EAASR,IAAI,qBAAsB,CACpDW,OAAQ,CAAC,IAFQ,uBACdN,EADc,EACdA,KADc,kBAOdA,EAAKS,SAPS,2CAAH,qDAUTC,EAAc,mCAAG,WAAMxC,GAAN,yFACLiC,EAASR,IAAT,gBAAsBzB,IADjB,uBACnB8B,EADmB,EACnBA,KADmB,kBAGnBA,GAHmB,2CAAH,sDAMdD,EAAY,mCAAG,WAAOY,GAAP,yFACHR,EAASR,IAAI,gBAAiB,CAC/CW,OAAQ,CACJK,MAAAA,KAHgB,uBACjBX,EADiB,EACjBA,KADiB,kBAOjBA,EAAKS,SAPY,2CAAH,sDAUZG,EAAgB,mCAAG,WAAM1C,GAAN,yFACPiC,EAASR,IAAT,iBAAuBzB,EAAvB,aADO,uBACrB8B,EADqB,EACrBA,KADqB,kBAGrBA,EAAKS,SAHgB,2CAAH,sDAMhBI,EAAe,mCAAG,WAAM3C,GAAN,yFACNiC,EAASR,IAAT,iBAAuBzB,EAAvB,aADM,uBACpB8B,EADoB,EACpBA,KACXc,QAAQC,IAAIf,EAAKgB,MAFc,kBAGpBhB,EAAKgB,MAHe,2CAAH,qD","sources":["modules/MoviesList/MoviesList.jsx","modules/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesSearchPage/MoviesSearchPage.jsx","shared/api/movies.js"],"sourcesContent":["import { memo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({items}) => {\n    const location = useLocation();\n\n    const elements = items.map(({id, title}) => \n    <Link  key={id} to={`/movies/${id}`} state={{from: location}}><li>{title}\n        </li></Link>);\n \n    return <ol>{elements}</ol>\n}\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = {\n    items: []\n}","import { useState } from \"react\";\n\nconst MoviesSearchForm = ({onSubmit}) => {\n    const [state, setState] = useState({\n        search: \"\"\n    });\n\n    const handleChange = ({target}) => {\n        const {name, value} = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({\n            search: \"\"\n        })\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input name=\"search\" value={state.search} onChange={handleChange} placeholder=\"Поиск\" required />\n            <button type=\"submit\">Искать</button>\n        </form>\n    )\n}\n\nexport default MoviesSearchForm;","import {useState, useEffect} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesSearchForm from \"../../modules/MoviesSearchForm/MoviesSearchForm\";\nimport MoviesList from \"../../modules/MoviesList/MoviesList\"\n\nimport { searchMovies } from '../../shared/api/movies';\n\nconst MoviesSearchPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const search = searchParams.get(\"search\");\n\n    useEffect(()=> {\n        const fetchMovies = async() => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                }));\n\n                const data = await searchMovies(search);\n                setState(prevState => ({\n                    ...prevState,\n                    items: data,\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                }))\n            }\n        };\n\n        if(search) {\n            fetchMovies()\n        }\n    }, [search]);\n\n    const changeSearch = ({search}) => {\n        setSearchParams({search});\n    };\n\n    const {items} = state;\n\n    return (\n        <div className=\"container\">\n            <h2>Movies Search Page</h2>\n            <MoviesSearchForm onSubmit={changeSearch} />\n            {items.length > 0 && <MoviesList items={items} />}\n        </div>\n    )\n}\n\nexport default MoviesSearchPage;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: '81e207fecffa1302d8e26d6b5f9ddafd',\n    }\n});\n\n\nexport const getMovies = async() => {\n    const {data} = await instance.get(\"trending/movie/day\", {\n        params: {\n          \n        }\n    });\n    \n    return data.results;\n}\n\nexport const getSingleMovie = async(id) => {\n    const {data} = await instance.get(`movie/${id}`);\n\n    return data;\n}\n\nexport const searchMovies = async (query) => {\n    const {data} = await instance.get(\"/search/movie\", {\n        params: {\n            query,\n        }\n    });\n    \n    return data.results;\n}\n\nexport const getMovieComments = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/reviews`);\n\n    return data.results;\n}\n\nexport const getMovieCredits = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/credits`);\nconsole.log(data.cast);\n    return data.cast;\n}"],"names":["MoviesList","items","location","useLocation","elements","map","id","title","to","state","from","memo","defaultProps","onSubmit","useState","search","setState","e","preventDefault","name","value","onChange","target","placeholder","required","type","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","prevState","searchMovies","data","className","length","instance","axios","baseURL","params","api_key","getMovies","results","getSingleMovie","query","getMovieComments","getMovieCredits","console","log","cast"],"sourceRoot":""}